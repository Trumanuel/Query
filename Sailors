1. Find the colours of boats reserved by Albert
select color 
from Sailors s, Boat b, reserves r 
where s.sid=r.sid and b.bid=r.bid and s.sname="Albert";

2.Find all sailor idâ€™s of sailors who have a rating of at least 8 or reserved boat 103
(select sid from Sailors where Sailors.rating>=8)
UNION
(select sid from reserves where reserves.bid=103);

3.Find the names of the sailor who have not reserved a boat whose name contains the string "storm". Order the name in the ascending order
select s.sname from Sailors s where s.sid not in 
(select s1.sid from Sailors s1, reserves r1 where r1.sid=s1.sid and s1.sname like "%storm%")
and s.sname like "%storm%" order by s.sname ASC;

4.Find the names of sailors who have reserved all boats.
select sname from Sailors s where not exists
	(select * from Boat b where not exists
		(select * from reserves r where r.sid=s.sid and b.bid=r.bid));

5.Find the name and age of theoldest sailor.
select sname, age
from Sailors where age in (select max(age) from Sailors);

6.For each boat which was reserved by at least 5 sailors with age >= 40,find the boat id and
the average age of such sailors.
select b.bid, avg(s.age) as average_age from Sailors s, Boat b, reserves r
where r.sid=s.sid and r.bid=b.bid and s.age>=40
group by bid
having 2<=count(distinct r.sid);

7.Create a view that shows the names and colours of all the boats that have been reserved by
a sailor with a specific rating.
create view NamesAndRating as
select sname, rating
from Sailors
order by rating DESC;

select * from NamesAndRating;

8.A trigger that prevents boats from being deleted If they have active reservations.
DELIMITER //
create or replace trigger CheckAndDelete
before delete on Boat
for each row
BEGIN
	IF EXISTS (select * from reserves where reserves.bid=old.bid) THEN
		SIGNAL SQLSTATE '45000' SET message_text='Boat is reserved and hence cannot be deleted';
	END IF;
END;//

DELIMITER ;

delete from Boat where bid=103;


